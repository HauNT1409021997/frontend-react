server {
    listen 80;

    # Check for maintenance flag before serving content
    if (-f /tmp/maintenance.flag) {
        return 503;
    }

    # Route traffic to the ReactJS frontend
    location / {
        proxy_pass http://reactjs-frontend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Add a timeout for the React service in case it's not responsive
        proxy_read_timeout 90;
    }

    location /favicon.ico {
        proxy_pass http://nodejs-frontend:3000/favicon.ico;  # Ensure favicon routing
    }

    # Route API traffic to the Java backend
    location /api/ {
        proxy_pass http://java-backend:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Optional: Set a longer timeout for backend API requests
        proxy_read_timeout 90;
    }

    # Custom error page for 503 errors (when maintenance flag is active)
    error_page 503 @maintenance;
    location @maintenance {
        root /usr/share/nginx/html;
        try_files /maintenance.html =503;
    }

    # Handle 404 errors
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
    }

    # Optional: Configure a health check endpoint to monitor the server status
    # location /health {
    #    return 200 'OK';
    #    add_header Content-Type text/plain;
    # }
}
